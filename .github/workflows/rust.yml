# based on: 
# https://ectobit.com/blog/speed-up-github-actions-rust-pipelines/
name: Rust

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  coverage:
    needs: build
    runs-on: ubuntu-latest
    env:
      CARGO_TERM_COLOR: always
    steps:
      - uses: actions/checkout@v4
      - name: Set up cargo cache
        uses: actions/cache@v3
        continue-on-error: false
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/            
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: ${{ runner.os }}-cargo-
      - name: Install Rust
        run: rustup update stable
      - name: Install cargo-llvm-cov
        uses: taiki-e/install-action@cargo-llvm-cov
      - name: Generate code coverage
        run: cargo llvm-cov --all-features --workspace --lcov --output-path lcov.info
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          # token: ${{ secrets.CODECOV_TOKEN }} # not required for public repos
          files: lcov.info
          fail_ci_if_error: true    

  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up cargo cache
      uses: actions/cache@v3
      continue-on-error: false
      with:
        path: |
          ~/.cargo/bin/
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          target/            
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: ${{ runner.os }}-cargo-
    - name: Install Rust
      run: rustup update stable  
    - name: Lint
      run: |
          cargo fmt --all -- --check
          cargo clippy -- -D warnings
    - name: Install cargo check tools
      run: |
            # cargo install --locked cargo-deny || true
            # cargo install --locked cargo-outdated || true
            # cargo install --locked cargo-udeps || true
            # cargo install --locked cargo-audit || true
            # cargo install --locked cargo-pants || true          
    - name: Check
      run: |
            # cargo deny check
            # cargo outdated --exit-code 1
            # cargo udeps
            # rm -rf ~/.cargo/advisory-db
            # cargo audit
            # cargo pants      
    - name: Build
      run: cargo build --verbose
    - name: Run tests
      run: cargo test --verbose
